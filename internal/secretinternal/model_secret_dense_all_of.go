/*
 * Centrify Vault REST API
 *
 * Vault REST API specification 
 *
 * API version: 1.0
 * Contact: support@centrify.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretinternal

import (
	"encoding/json"
)

// SecretDenseAllOf struct for SecretDenseAllOf
type SecretDenseAllOf struct {
	Meta Metadata `json:"meta"`
	AdditionalProperties map[string]interface{}
}

type _SecretDenseAllOf SecretDenseAllOf

// NewSecretDenseAllOf instantiates a new SecretDenseAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretDenseAllOf(meta Metadata) *SecretDenseAllOf {
	this := SecretDenseAllOf{}
	this.Meta = meta
	return &this
}

// NewSecretDenseAllOfWithDefaults instantiates a new SecretDenseAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretDenseAllOfWithDefaults() *SecretDenseAllOf {
	this := SecretDenseAllOf{}
	return &this
}

// GetMeta returns the Meta field value
func (o *SecretDenseAllOf) GetMeta() Metadata {
	if o == nil {
		var ret Metadata
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
func (o *SecretDenseAllOf) GetMetaOk() (*Metadata, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Meta, true
}

// SetMeta sets field value
func (o *SecretDenseAllOf) SetMeta(v Metadata) {
	o.Meta = v
}

func (o SecretDenseAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SecretDenseAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varSecretDenseAllOf := _SecretDenseAllOf{}

	if err = json.Unmarshal(bytes, &varSecretDenseAllOf); err == nil {
		*o = SecretDenseAllOf(varSecretDenseAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretDenseAllOf struct {
	value *SecretDenseAllOf
	isSet bool
}

func (v NullableSecretDenseAllOf) Get() *SecretDenseAllOf {
	return v.value
}

func (v *NullableSecretDenseAllOf) Set(val *SecretDenseAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretDenseAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretDenseAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretDenseAllOf(val *SecretDenseAllOf) *NullableSecretDenseAllOf {
	return &NullableSecretDenseAllOf{value: val, isSet: true}
}

func (v NullableSecretDenseAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretDenseAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


