/*
 * Centrify Vault REST API
 *
 * Vault REST API specification 
 *
 * API version: 1.0
 * Contact: support@centrify.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretinternal

import (
	"encoding/json"
)

// SecretBagWritableAllOf struct for SecretBagWritableAllOf
type SecretBagWritableAllOf struct {
	// The privileged data in a secret bag. Required for vault and modify operations.
	Data map[string]string `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _SecretBagWritableAllOf SecretBagWritableAllOf

// NewSecretBagWritableAllOf instantiates a new SecretBagWritableAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretBagWritableAllOf(data map[string]string) *SecretBagWritableAllOf {
	this := SecretBagWritableAllOf{}
	this.Data = data
	return &this
}

// NewSecretBagWritableAllOfWithDefaults instantiates a new SecretBagWritableAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretBagWritableAllOfWithDefaults() *SecretBagWritableAllOf {
	this := SecretBagWritableAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *SecretBagWritableAllOf) GetData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SecretBagWritableAllOf) GetDataOk() (*map[string]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SecretBagWritableAllOf) SetData(v map[string]string) {
	o.Data = v
}

func (o SecretBagWritableAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SecretBagWritableAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varSecretBagWritableAllOf := _SecretBagWritableAllOf{}

	if err = json.Unmarshal(bytes, &varSecretBagWritableAllOf); err == nil {
		*o = SecretBagWritableAllOf(varSecretBagWritableAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretBagWritableAllOf struct {
	value *SecretBagWritableAllOf
	isSet bool
}

func (v NullableSecretBagWritableAllOf) Get() *SecretBagWritableAllOf {
	return v.value
}

func (v *NullableSecretBagWritableAllOf) Set(val *SecretBagWritableAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretBagWritableAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretBagWritableAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretBagWritableAllOf(val *SecretBagWritableAllOf) *NullableSecretBagWritableAllOf {
	return &NullableSecretBagWritableAllOf{value: val, isSet: true}
}

func (v NullableSecretBagWritableAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretBagWritableAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


