/*
 * Centrify Vault REST API
 *
 * Vault REST API specification 
 *
 * API version: 1.0
 * Contact: support@centrify.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package secretinternal

import (
	"encoding/json"
)

// SecretTextWritableAllOf struct for SecretTextWritableAllOf
type SecretTextWritableAllOf struct {
	// The privileged data in a text secret. Required for vault and modify operations.
	Data string `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _SecretTextWritableAllOf SecretTextWritableAllOf

// NewSecretTextWritableAllOf instantiates a new SecretTextWritableAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretTextWritableAllOf(data string) *SecretTextWritableAllOf {
	this := SecretTextWritableAllOf{}
	this.Data = data
	return &this
}

// NewSecretTextWritableAllOfWithDefaults instantiates a new SecretTextWritableAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretTextWritableAllOfWithDefaults() *SecretTextWritableAllOf {
	this := SecretTextWritableAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *SecretTextWritableAllOf) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *SecretTextWritableAllOf) GetDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *SecretTextWritableAllOf) SetData(v string) {
	o.Data = v
}

func (o SecretTextWritableAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *SecretTextWritableAllOf) UnmarshalJSON(bytes []byte) (err error) {
	varSecretTextWritableAllOf := _SecretTextWritableAllOf{}

	if err = json.Unmarshal(bytes, &varSecretTextWritableAllOf); err == nil {
		*o = SecretTextWritableAllOf(varSecretTextWritableAllOf)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSecretTextWritableAllOf struct {
	value *SecretTextWritableAllOf
	isSet bool
}

func (v NullableSecretTextWritableAllOf) Get() *SecretTextWritableAllOf {
	return v.value
}

func (v *NullableSecretTextWritableAllOf) Set(val *SecretTextWritableAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretTextWritableAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretTextWritableAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretTextWritableAllOf(val *SecretTextWritableAllOf) *NullableSecretTextWritableAllOf {
	return &NullableSecretTextWritableAllOf{value: val, isSet: true}
}

func (v NullableSecretTextWritableAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretTextWritableAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


